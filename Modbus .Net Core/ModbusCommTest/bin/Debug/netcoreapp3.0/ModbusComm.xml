<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModbusComm</name>
    </assembly>
    <members>
        <member name="T:ModbusComm.CModbusAscii">
            <summary>
            Modbus Ascii通讯类，支持跨线程读写操作；如果是单线程操作，请将 EnableThreadLock 设置为 false 以提升性能
            授权声明：本软件作者将代码开源，仅用于交流学习。如果有商用需求，请联系软件作者协商相关事宜；否则，软件作者保留相关法律赋予的权利。
            免责声明：使用本软件的相关人员必须仔细检查代码并负全部责任，软件作者不承担任何可能的损失(包含可抗力和不可抗力因素)。
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.#ctor(System.String,System.String,Converter.eBaudRate,System.IO.Ports.Parity,System.IO.Ports.StopBits,System.Int32,System.Int32,System.Boolean,Converter.BytesFormat,Converter.BytesFormat,Converter.BytesFormat,ThreadLock.LockerType)">
            <summary>
            Modbus Ascii通讯类的构造函数
            </summary>
            <param name="DLLPassword">使用此DLL的密码</param>
            <param name="RS232CPortName">串口通讯的端口名称</param>
            <param name="baudrate">波段率</param>
            <param name="parity">奇偶校验</param>
            <param name="stopbits">停止位</param>
            <param name="writetimeout">写超时时间</param>
            <param name="readtimeout">读超时时间</param>
            <param name="ReadSlaveDataOnly">是否只读取从站返回的消息，默认：false</param>
            <param name="paraBytesFormat">命令参数：多字节数据的格式</param>
            <param name="writeKeepRegisterBytesFormat">写数据：多字节数据的格式</param>
            <param name="readRegisterBytesFormat">读输入和保持寄存器数据：多字节数据的格式</param>
            <param name="ThreadLockType">线程同步锁类型</param>
        </member>
        <member name="F:ModbusComm.CModbusAscii.PosOfSlaveAddressInAsciiReceivedString">
            <summary>
            Ascii-通讯方式，从站地址：第2~3字符(如果用字节处理，相应值/2)，收到从站返回的字符串中，从站地址码的位置[2] -- 第2个字符，用于Strings.Mid() 函数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.PosOfFuncCodeInAsciiReceivedString">
            <summary>
            接Ascii-通讯方式，功能码：第4~5字符(如果用字节处理，相应值/2)，收到从站返回的字符串中，功能码的位置[4] -- 第4个字符，用于Strings.Mid() 函数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.PosOfErrorCodeInAsciiReceivedString">
            <summary>
            接Ascii-通讯方式，错误码：第6~7字符(如果用字节处理，相应值/2)，收到从站返回的字符串中，错误码的位置[6] -- 第6个字符，用于Strings.Mid() 函数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.PosOfDataLengthInAsciiReceivedString">
            <summary>
            接Ascii-通讯方式，数据字节长度：第6~7字符(如果用字节处理，相应值/2)，收到从站返回的字符串中，数据字节长度的位置[6] -- 第6个字符，用于Strings.Mid() 函数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.StartPosOfDataInAsciiReceivedString">
            <summary>
            接Ascii-通讯方式，有效数据起始位置：第8字符(如果用字节处理，相应值/2)，收到从站返回的字符串中，有效数据的起始位置，默认值8
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.IsConnected">
            <summary>
            是否已经建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bIsConnected">
            <summary>
            是否已经建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bIsDisposing">
            <summary>
            释放资源标志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.qReceivedDataQueue">
            <summary>
            只读模式下，Modbus通讯返回数据的结果解析类对象的队列
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.DequeueReceivedData">
            <summary>
            只读模式下，Modbus通讯返回数据的结果
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bReadSlaveDataOnly">
            <summary>
            是否只读取从站返回的消息，适用于从站主动发送的情况
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ParaBytesFormat">
            <summary>
            命令参数：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.WriteCoilBytesFormat">
            <summary>
            写线圈数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.WriteKeepRegisterBytesFormat">
            <summary>
            写保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ReadInputRegisterBytesFormat">
            <summary>
            读输入寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ReadKeepRegisterBytesFormat">
            <summary>
            读保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ReadCoilBytesFormat">
            <summary>
            读线圈数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ReadInputIOBytesFormat">
            <summary>
            读输入离散信号数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.iMinLengthOfResponse">
            <summary>
            回复帧的最小长度:2
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.SyncLocker">
            <summary>
            同步线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bEnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.EnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.Author">
            <summary>
            软件作者：彭东南, southeastofstar@163.com
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.ProcessFeedbackDataByBytes">
            <summary>
            处理从站返回的信息时使用处理字节的方式，默认值：false
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.iSleepTime">
            <summary>
            System.Threading.Thread.Sleep的等待时间(ms)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.iWaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.WaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)，范围：50~3000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bSaveReceivedStringToLog">
            <summary>
            保存接收到的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.bSaveSendStringToLog">
            <summary>
            保存发送的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.qErrorMsg">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.ShowMessageDialog">
            <summary>
            是否使用提示对话框显示信息，默认 false
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.Parity">
            <summary>
            获取或设置奇偶校验检查协议
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.StopBits">
            <summary>
            获取或设置每个字节的标准停止位数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.WriteTimeout">
            <summary>
            获取或设置写操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.ReadTimeout">
            <summary>
            获取或设置读取操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.Prefix">
            <summary>
            起始位字符(:)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.Suffix">
            <summary>
            结束符(回车+换行)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.PrefixByte">
            <summary>
            起始位字符(:)的字节
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.SuffixBytes">
            <summary>
            结束符(回车+换行)的字节数组
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.RS232CPort">
            <summary>
            进行Modbus Ascii通讯的串口实例化对象
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusAscii.eBaudRateSetting">
            <summary>
            波特率设置
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.IsOpened">
            <summary>
            串口是否已经打开
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusAscii.BaudRate">
            <summary>
            获取当前的波特率(bps)；设置波特率时，先使用函数BaudRateSetting设置为eBaudRate.Rate_UserDefine
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.BaudRateSetting(Converter.eBaudRate)">
            <summary>
            设置波特率(bps)
            </summary>
            <param name="BaudValue"></param>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="BitValue">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的线圈状态，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="BitValue">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ByteValue">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 位 - bit)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="ByteValue">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ByteValue">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 位 - bit)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="ByteValue">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站N个2个双字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈N个2个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站N个2个双字的线圈状态，函数是以字为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈N个2个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个输入位的状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回单个输入位的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回多个字节输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的输入状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的输入状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态2个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个2双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入状态多个2双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态2个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个2双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入状态多个2双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站输入寄存器的当前值(int)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站输入寄存器的当前值(uint)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            ?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            ?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：4字</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站输入寄存器的当前值(long)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站输入寄存器的当前值(long)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：2双字</param>
            <param name="Value">返回输入寄存器的当前值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站输入寄存器的当前值(ulong)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站输入寄存器的当前值(ulong)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：2双字</param>
            <param name="Value">返回输入寄存器的当前值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：short</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：short</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：short</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：short</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：float</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站ulong(64位无符号整数值)值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站ulong(64位无符号整数值)值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilBit(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            写从站线圈(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="IsOn">设置线圈的当前值：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilBit(System.Byte,System.UInt16,System.Boolean[])">
            <summary>
            写从站线圈字节(位 - bit；1字节 = 8bit)，写线圈的布尔数组长度必须是8的整数倍
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置8*N个线圈的当前值数组：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilByte(System.Byte,System.UInt16,System.Byte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilByte(System.Byte,System.UInt16,System.Byte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilByte(System.Byte,System.UInt16,System.SByte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilByte(System.Byte,System.UInt16,System.SByte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteCoilWord(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站单个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站多个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站单个保持寄存器的值(ushort:  0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(ushort:  0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站多个保持寄存器的值(ushort:  0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(ushort:  0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写int((-2,147,483,648 到 2,147,483,647, 有符号, 32 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写int(-2,147,483,648 到 2,147,483,647, 有符号, 32 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写uint(0 到 4,294,967,295)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写uint(0 到 4,294,967,295)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Single)">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Double)">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写ulong(64位无符号整数值)值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写ulong(64位无符号整数值)值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ClearReceiveBuffer">
            <summary>
            清除发送前的接收和发送缓冲区
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.ForceUnlock">
            <summary>
            出现线程锁异常时，用于执行强制清除线程锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Lock">
            <summary>
            锁定线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Unlock">
            <summary>
            释放线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Open">
            <summary>
            打开串口端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Close">
            <summary>
            关闭串口端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.Enqueue(System.String)">
            <summary>
            保存信息到队列
            </summary>
            <param name="Msg">信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.GetInfo">
            <summary>
            获取通讯的记录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.UnpackReceivedAsciiMsg(System.Byte[])">
            <summary>
            将Modbus-Ascii接收到的字节信息进行解析
            </summary>
            <param name="ReceivedMsg">接收到的字节信息</param>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusAscii.sErrorMsgForReadWrite">
            <summary>
            执行读写时的错误信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusAscii.WriteAndReadBytes(System.Byte[],System.Byte)">
            <summary>
            发送数据到串口并接收串口返回的数据
            </summary>
            <param name="byResult">要发送的字节数据</param>
            <param name="DeviceAddress">目标从站地址</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.AnalysisErrorCode(System.String)">
            <summary>
            TBD -- 解析返回信息的错误代码
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字符串(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.AnalysisErrorCode(System.Byte[])">
            <summary>
            解析返回信息的错误代码，此字节数组必须是去掉首字符 ':' 和结束符的字符串按照 2个字符1个字节的方式转化为字节数组
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字节数组(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.PackReadCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.UInt16)">
            <summary>
            创建读取命令的字节数组，可以直接发送这个字节数组到串口端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="ReadFunctionCode">读取功能码</param>
            <param name="BeginReadAddress">读取的起始地址</param>
            <param name="ReadDataLength">读取数据长度，有效值范围：1~2000(位)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.PackSingleWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.String)">
            <summary>
            封装写单个线圈/保持寄存器命令，返回处理好的字节数组
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">要发送的数据的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.PackMultiWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32,System.Int32,System.String)">
            <summary>
            封装写多个线圈/保持寄存器命令，返回处理好的字节数组
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="DataLength">要发送的数据的数量：线圈 -- 位(bool)；寄存器 -- 字(short)</param>
            <param name="BytesCount">要发送数据的字节数</param>
            <param name="Data">要发送的数据的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcResultsIncludeLRC(System.String)">
            <summary>
            将命令字符串转化为字节，然后计算LRC，并返回计算后的总字节数组
            </summary>
            <param name="CmdData"></param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcLRCBytes(System.String)">
            <summary>
            计算LRC值，返回长度为2的字节数组 -- 格式：地址(2个字符) + 功能码(2个字符) + 起始地址(4个字符) + 数据长度(4个字符)
            </summary>
            <param name="ModbusAsciiCommand">16进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcLRCBytes(System.Byte[])">
            <summary>
            计算LRC值，返回长度为2的字节数组 -- 格式：地址(2个字符) + 功能码(2个字符) + 起始地址(4个字符) + 数据长度(4个字符)
            </summary>
            <param name="DataUsedToCalcLRC">用于计算LRC的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcLRCString(System.String)">
            <summary>
            计算LRC值，返回值的16进制字符串 -- 格式：地址(2个字符) + 功能码(2个字符) + 起始地址(4个字符) + 数据长度(4个字符)
            </summary>
            <param name="ModbusAsciiCommand">16进制字符串</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcLRCForReceivedBytesFromSlave(System.Byte[])">
            <summary>
            将客户端返回的字节信息进行计算LRC，确认匹配OK就返回true，否则返回 false
            </summary>
            <param name="ReceivedBytesFromSlave">客户端返回的字节信息</param>
            <returns>匹配OK就返回true，否则返回 false</returns>
        </member>
        <member name="M:ModbusComm.CModbusAscii.CalcLRCForReceivedStringFromSlave(System.String)">
            <summary>
            将客户端返回的字符串信息进行计算LRC，确认匹配OK就返回true，否则返回 false
            </summary>
            <param name="ReceivedStringFromSlave">客户端返回的字符串信息</param>
            <returns>匹配OK就返回true，否则返回 false</returns>
        </member>
        <member name="T:ModbusComm.CModbusRTU">
            <summary>
            Modbus RTU通讯类，支持跨线程读写操作；如果是单线程操作，请将 EnableThreadLock 设置为 false 以提升性能
            授权声明：本软件作者将代码开源，仅用于交流学习。如果有商用需求，请联系软件作者协商相关事宜；否则，软件作者保留相关法律赋予的权利。
            免责声明：使用本软件的相关人员必须仔细检查代码并负全部责任，软件作者不承担任何可能的损失(包含可抗力和不可抗力因素)。
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.#ctor(System.String,System.String,Converter.eBaudRate,System.IO.Ports.Parity,System.IO.Ports.StopBits,System.Int32,System.Int32,System.Boolean,Converter.BytesFormat,Converter.BytesFormat,Converter.BytesFormat,ThreadLock.LockerType)">
            <summary>
            Modbus RTU通讯类的构造函数
            </summary>
            <param name="DLLPassword">使用此DLL的密码</param>
            <param name="RS232CPortName">串口通讯的端口名称</param>
            <param name="baudrate">波段率</param>
            <param name="parity">奇偶校验</param>
            <param name="stopbits">停止位</param>
            <param name="writetimeout">写超时时间</param>
            <param name="readtimeout">读超时时间</param>
            <param name="ReadSlaveDataOnly">是否只读取从站返回的消息，默认：false</param>
            <param name="paraBytesFormat">命令参数：多字节数据的格式</param>
            <param name="writeKeepRegisterBytesFormat">写数据：多字节数据的格式</param>
            <param name="readRegisterBytesFormat">读输入和保持寄存器数据：多字节数据的格式</param>
            <param name="ThreadLockType">线程同步锁类型</param>
        </member>
        <member name="F:ModbusComm.CModbusRTU.PosIndexOfSlaveAddressInRTUReceivedBytes">
            <summary>
            接收到的字节数组中，从站地址的索引号[0]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.PosIndexOfFuncCodeInRTUReceivedBytes">
            <summary>
            接收到的字节数组中，功能码的索引号[1]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.PosIndexOfDataLengthInRTUReceivedBytes">
            <summary>
            接收到的字节数组中，数据字节长度(命令执行成功)的索引号[2]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.PosIndexOfErrorCodeInRTUReceivedBytes">
            <summary>
            接收到的字节数组中，错误码(命令执行失败)的索引号[2]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.PosIndexOfDataInRTUReceivedBytes">
            <summary>
            接收到的字节数组中，接收到的有效数据开始的索引号[3]
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.IsConnected">
            <summary>
            是否已经建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bIsConnected">
            <summary>
            是否已经建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bIsDisposing">
            <summary>
            释放资源标志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.qReceivedDataQueue">
            <summary>
            只读模式下，Modbus通讯返回数据的结果解析类对象的队列
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.DequeueReceivedData">
            <summary>
            只读模式下，Modbus通讯返回数据的结果
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bReadSlaveDataOnly">
            <summary>
            是否只读取从站返回的消息，适用于从站主动发送的情况
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ParaBytesFormat">
            <summary>
            命令参数：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.WriteCoilBytesFormat">
            <summary>
            写线圈数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.WriteKeepRegisterBytesFormat">
            <summary>
            写保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ReadInputRegisterBytesFormat">
            <summary>
            读输入寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ReadKeepRegisterBytesFormat">
            <summary>
            读保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ReadCoilBytesFormat">
            <summary>
            读线圈数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ReadInputIOBytesFormat">
            <summary>
            读输入离散信号数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.iMinLengthOfResponse">
            <summary>
            回复帧的最小长度:2
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.SyncLocker">
            <summary>
            同步线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bEnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.EnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.Author">
            <summary>
            软件作者：彭东南, southeastofstar@163.com
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.iSleepTime">
            <summary>
            System.Threading.Thread.Sleep的等待时间(ms)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.iWaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.WaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)，范围：50~3000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bSaveReceivedStringToLog">
            <summary>
            保存接收到的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.bSaveSendStringToLog">
            <summary>
            保存发送的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.qErrorMsg">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.ShowMessageDialog">
            <summary>
            是否使用提示对话框显示信息，默认 false
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.Parity">
            <summary>
            获取或设置奇偶校验检查协议
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.StopBits">
            <summary>
            获取或设置每个字节的标准停止位数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.WriteTimeout">
            <summary>
            获取或设置写操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.ReadTimeout">
            <summary>
            获取或设置读取操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.RS232CPort">
            <summary>
            进行Modbus RTU通讯的串口实例化对象
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusRTU.eBaudRateSetting">
            <summary>
            波特率设置
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.IsOpened">
            <summary>
            串口是否已经打开
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusRTU.BaudRate">
            <summary>
            获取当前的波特率(bps)；设置波特率时，先使用函数BaudRateSetting设置为eBaudRate.Rate_UserDefine
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.BaudRateSetting(Converter.eBaudRate)">
            <summary>
            设置波特率(bps)
            </summary>
            <param name="BaudValue"></param>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个输入位的状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回单个输入位的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回多个字节输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：float</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilBit(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            写从站线圈(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="IsOn">设置线圈的当前值：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilBit(System.Byte,System.UInt16,System.Boolean[])">
            <summary>
            写从站线圈字节(位 - bit；1字节 = 8bit)，写线圈的布尔数组长度必须是8的整数倍
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置8*N个线圈的当前值数组：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilByte(System.Byte,System.UInt16,System.Byte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilByte(System.Byte,System.UInt16,System.Byte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilByte(System.Byte,System.UInt16,System.SByte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilByte(System.Byte,System.UInt16,System.SByte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Single)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Double)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteCoilWord(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站单个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站多个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站单个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站多个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Single)">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Double)">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ClearReceiveBuffer">
            <summary>
            清除发送前的接收和发送缓冲区
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.ForceUnlock">
            <summary>
            出现线程锁异常时，用于执行强制清除线程锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Lock">
            <summary>
            锁定线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Unlock">
            <summary>
            释放线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Open">
            <summary>
            打开串口端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Close">
            <summary>
            关闭串口端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.Enqueue(System.String)">
            <summary>
            保存信息到队列
            </summary>
            <param name="Msg">信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.GetInfo">
            <summary>
            获取通讯的记录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.UnpackReceivedRTUMsg(System.Byte[])">
            <summary>
            将Modbus-RTU接收到的字节信息进行解析
            </summary>
            <param name="ReceivedMsg">接收到的字节信息</param>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusRTU.sErrorMsgForReadWrite">
            <summary>
            执行读写时的错误信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusRTU.WriteAndReadBytes(System.Byte[],System.Byte)">
            <summary>
            发送数据到串口并接收串口返回的数据
            </summary>
            <param name="byResult">要发送的字节数据</param>
            <param name="DeviceAddress">目标从站地址</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.PackReadCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32)">
            <summary>
            封装读取命令，返回处理好的字节数组，然后可以直接将字节数组发送到串口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.PackSingleWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Byte[])">
            <summary>
            封装写命令，返回处理好的字节数组
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">要发送的数据的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.PackMultiWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32,System.Byte[])">
            <summary>
            封装写命令，返回处理好的字节数组
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="DataLength">要发送的数据的数量：线圈 -- 位(bool)；寄存器 -- 字(short)</param>
            <param name="Data">要发送的数据的字节数组</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.AnalysisErrorCode(System.Byte[])">
            <summary>
            解析返回信息的错误代码
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字节数组(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.CalcCRC(System.Byte[],System.Int32)">
            <summary>
            计算循环冗余码校验值(2个字节) - 发送时要将CRC校验值的高低字节交换位置：[1][0]，不能按照原始顺序：[0][1]；
            CRC - Cyclical Redundancy Check
            </summary>
            <param name="BytesData">用来计算CRC的字节数组值</param>
            <param name="SetCalcLengthOfBytes"></param>
            <returns>循环冗余码校验值(2个字节)</returns>
        </member>
        <member name="M:ModbusComm.CModbusRTU.CheckCRCOfReceivedData(System.Byte[])">
            <summary>
            检查接收到的数据帧里面的CRC是否匹配OK，如果不匹配就代表数据发生错误，计算方式：将收到的字节数组长度减去2，然后计算CRC
            </summary>
            <param name="ReceivedRTUFrame">接收到的数据帧字节数组</param>
            <returns>true - 接收到的数据帧无错误; false - 接收到的数据帧有错误</returns>
        </member>
        <member name="T:ModbusComm.CModbusSocket">
            <summary>
            Modbus Socket(TCP/UDP)通讯客户端类，支持跨线程读写操作；如果是单线程操作，请将 EnableThreadLock 设置为 false 以提升性能
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.#ctor(System.String,System.String,System.UInt16,Converter.Modbus.SocketDefinition,System.Int32,System.Int32,System.Boolean,Converter.BytesFormat,Converter.BytesFormat,Converter.BytesFormat,ThreadLock.LockerType)">
            <summary>
            Modbus Socket(TCP/UDP)通讯客户端类的构造函数
            </summary>
            <param name="DLLPassword">使用此DLL的密码</param>
            <param name="TargetServerIPAddress">服务器的IP地址</param>
            <param name="TargetServerPort">服务器的端口号</param>
            <param name="socketType">套接字通讯类型</param>
            <param name="SendTimeout">写超时时间</param>
            <param name="ReceiveTimeout">读超时时间</param>
            <param name="ReadSlaveDataOnly">是否只读取从站返回的消息，默认：false</param>
            <param name="paraBytesFormat">命令参数：多字节数据的格式</param>
            <param name="writeKeepRegisterBytesFormat">写数据：多字节数据的格式</param>
            <param name="readRegisterBytesFormat">读输入和保持寄存器数据：多字节数据的格式</param>
            <param name="ThreadLockType">线程同步锁类型</param>
        </member>
        <member name="F:ModbusComm.CModbusSocket.SocketTypeForComm">
            <summary>
            套接字通讯类型
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bEnableHeartBeat">
            <summary>
            是否启用心跳包功能，默认：false
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.iHeartBeatInterval">
            <summary>
            心跳间隔时间，2000ms
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.HeartBeatInterval">
            <summary>
            心跳间隔时间，2000ms，范围：100~200000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.byHeartBeatMsg">
            <summary>
            发送的心跳信息
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.swUsedUnbusyTime">
            <summary>
            用于计算通讯空闲时间
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bIsBusyBackup">
            <summary>
            通讯进行中标志备份
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bIsBusy">
            <summary>
            通讯进行中标志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.threadForReadonlyMode">
            <summary>
            只读模式下读取消息的线程
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.qReceivedDataQueue">
            <summary>
            只读模式下，Modbus通讯返回数据的结果解析类对象的队列
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.DequeueReceivedData">
            <summary>
            只读模式下，Modbus通讯返回数据的结果
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bReadSlaveDataOnly">
            <summary>
            是否只读取从站返回的消息，适用于从站主动发送的情况
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ParaBytesFormat">
            <summary>
            命令参数：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.WriteCoilBytesFormat">
            <summary>
            写线圈数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.WriteKeepRegisterBytesFormat">
            <summary>
            写保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ReadInputRegisterBytesFormat">
            <summary>
            读输入寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ReadKeepRegisterBytesFormat">
            <summary>
            读保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ReadCoilBytesFormat">
            <summary>
            读线圈数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ReadInputIOBytesFormat">
            <summary>
            读输入离散信号数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.iMinLengthOfResponse">
            <summary>
            回复帧的最小长度:2
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.SyncLocker">
            <summary>
            同步线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bEnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.EnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.Author">
            <summary>
            软件作者：彭东南, southeastofstar@163.com
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ProtocolIDCodeBytes">
            <summary>
            协议标识
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.MsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.stMsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.MsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.stMsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.IsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bIsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bIsDisposing">
            <summary>
            释放当前类的对象资源
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.ThreadConnectServer">
            <summary>
            连接服务器端的线程
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ServerIPAddress">
            <summary>
            目标服务器的IP地址
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ServerPort">
            <summary>
            目标服务器的监听端口
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.iServerPort">
            <summary>
            服务器以太网端口号
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.ipServerIPAddress">
            <summary>
            服务器以太网IP地址
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.iSleepTime">
            <summary>
            System.Threading.Thread.Sleep的等待时间(ms)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.iWaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.WaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)，范围：50~3000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bSaveReceivedStringToLog">
            <summary>
            保存接收到的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bSaveSendStringToLog">
            <summary>
            保存发送的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.qErrorMsg">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.ShowMessageDialog">
            <summary>
            是否使用提示对话框显示信息，默认 false
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.SendTimeout">
            <summary>
            获取或设置写操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusSocket.ReceiveTimeout">
            <summary>
            获取或设置读取操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.Client">
            <summary>
            进行Modbus Socket通讯的Socket实例化对象
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.PosIndexOfDataLengthInSocketReceivedBytes">
            <summary>
            接收到的字节数组中，数据长度的索引号[4]~[5]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.PosIndexOfSlaveAddressInSocketReceivedBytes">
            <summary>
            接收到的字节数组中，从站地址的索引号[6]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.PosIndexOfFuncCodeInSocketReceivedBytes">
            <summary>
            接收到的字节数组中，功能码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.PosIndexOfErrorCodeInSocketReceivedBytes">
            <summary>
            接收到的字节数组中，错误码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.PosIndexOfDataInSocketReceivedBytes">
            <summary>
            执行读取操作时，接收到的字节数组中，接收到的数据开始的索引号[9]
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个输入位的状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回单个输入位的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回多个字节输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：float</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilBit(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            写从站线圈(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="IsOn">设置线圈的当前值：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilBit(System.Byte,System.UInt16,System.Boolean[])">
            <summary>
            写从站线圈字节(位 - bit；1字节 = 8bit)，写线圈的布尔数组长度必须是8的整数倍
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置8*N个线圈的当前值数组：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilByte(System.Byte,System.UInt16,System.Byte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilByte(System.Byte,System.UInt16,System.Byte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilByte(System.Byte,System.UInt16,System.SByte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilByte(System.Byte,System.UInt16,System.SByte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Single)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Double)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteCoilWord(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站单个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站多个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站单个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站多个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Single)">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Double)">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ClearReceiveBuffer">
            <summary>
            清除发送前的接收缓冲区
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.ForceUnlock">
            <summary>
            出现线程锁异常时，用于执行强制清除线程锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Lock">
            <summary>
            锁定线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Unlock">
            <summary>
            释放线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bDisconnect">
            <summary>
            
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusSocket.bBackupOfConnectedFlag">
            <summary>
            已经
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Open">
            <summary>
            打开Socket端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Close">
            <summary>
            关闭Socket端口
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusSocket.sFilterRepeatMsg">
            <summary>
            过滤掉重复信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.Enqueue(System.String)">
            <summary>
            保存信息到队列
            </summary>
            <param name="Msg">信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.GetInfo">
            <summary>
            获取通讯的记录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.UnpackReceivedRTUMsg(System.Byte[])">
            <summary>
            将Modbus-RTU接收到的字节信息进行解析
            </summary>
            <param name="ReceivedMsg">接收到的字节信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.AnalysisErrorCode(System.Byte[])">
            <summary>
            解析返回信息的错误代码
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字节数组(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusSocket.sErrorMsgForReadWrite">
            <summary>
            执行读写时的错误信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusSocket.WriteAndReadBytes(System.Byte[],System.Byte)">
            <summary>
            发送数据到Socket并接收Socket返回的数据
            </summary>
            <param name="byResult">要发送的字节数据</param>
            <param name="DeviceAddress">目标从站地址</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.PackMultiWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32,System.Byte[])">
            <summary>
            创建写保持寄存器命令的字节数组，可以直接发送这个字节数组到Socket端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">发送的数据(字节)</param>
            <param name="DataLength">要发送的数据的数量：线圈 -- 位(bool)；寄存器 -- 字(short)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.PackSingleWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Byte[])">
            <summary>
            创建写保持寄存器命令的字节数组，可以直接发送这个字节数组到Socket端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">发送的数据(字节)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusSocket.PackReadCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32)">
            <summary>
            创建读取命令的字节数组，可以直接发送这个字节数组到Socket端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="ReadDataLength">读取数据长度，有效值范围：1~2000(位)</param>
            <returns></returns>
        </member>
        <member name="T:ModbusComm.CModbusTCP">
            <summary>
            Modbus TCP通讯客户端类，支持跨线程读写操作；如果是单线程操作，请将 EnableThreadLock 设置为 false 以提升性能
            授权声明：本软件作者将代码开源，仅用于交流学习。如果有商用需求，请联系软件作者协商相关事宜；否则，软件作者保留相关法律赋予的权利。
            免责声明：使用本软件的相关人员必须仔细检查代码并负全部责任，软件作者不承担任何可能的损失(包含可抗力和不可抗力因素)。
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.#ctor(System.String,System.String,System.UInt16,System.Int32,System.Int32,System.Boolean,Converter.BytesFormat,Converter.BytesFormat,Converter.BytesFormat,ThreadLock.LockerType)">
            <summary>
            Modbus TCP通讯客户端类的构造函数
            </summary>
            <param name="DLLPassword">使用此DLL的密码</param>
            <param name="TargetServerIPAddress">服务器的IP地址</param>
            <param name="TargetServerPort">服务器的端口号</param>
            <param name="SendTimeout">写超时时间</param>
            <param name="ReceiveTimeout">读超时时间</param>
            <param name="ReadSlaveDataOnly">是否只读取从站返回的消息，默认：false</param>
            <param name="paraBytesFormat">命令参数：多字节数据的格式</param>
            <param name="writeKeepRegisterBytesFormat">写数据：多字节数据的格式</param>
            <param name="readRegisterBytesFormat">读输入和保持寄存器数据：多字节数据的格式</param>
            <param name="ThreadLockType">线程同步锁类型</param>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bEnableHeartBeat">
            <summary>
            是否启用心跳包功能，默认：false
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.iHeartBeatInterval">
            <summary>
            心跳间隔时间，2000ms
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.HeartBeatInterval">
            <summary>
            心跳间隔时间，2000ms，范围：100~200000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.byHeartBeatMsg">
            <summary>
            发送的心跳信息
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.swUsedUnbusyTime">
            <summary>
            用于计算通讯空闲时间
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bIsBusyBackup">
            <summary>
            通讯进行中标志备份
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bIsBusy">
            <summary>
            通讯进行中标志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.threadForReadonlyMode">
            <summary>
            只读模式下读取消息的线程
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.qReceivedDataQueue">
            <summary>
            只读模式下，Modbus通讯返回数据的结果解析类对象的队列
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.DequeueReceivedData">
            <summary>
            只读模式下，Modbus通讯返回数据的结果
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bReadSlaveDataOnly">
            <summary>
            是否只读取从站返回的消息，适用于从站主动发送的情况
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ParaBytesFormat">
            <summary>
            命令参数：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.WriteCoilBytesFormat">
            <summary>
            写线圈数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.WriteKeepRegisterBytesFormat">
            <summary>
            写保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ReadInputRegisterBytesFormat">
            <summary>
            读输入寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ReadKeepRegisterBytesFormat">
            <summary>
            读保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ReadCoilBytesFormat">
            <summary>
            读线圈数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ReadInputIOBytesFormat">
            <summary>
            读输入离散信号数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.iMinLengthOfResponse">
            <summary>
            回复帧的最小长度:2
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.SyncLocker">
            <summary>
            同步线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bEnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.EnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.Author">
            <summary>
            软件作者：彭东南, southeastofstar@163.com
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ProtocolIDCodeBytes">
            <summary>
            协议标识
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.MsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.stMsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.MsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.stMsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.IsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bIsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bIsDisposing">
            <summary>
            释放当前类的对象资源
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.ThreadConnectServer">
            <summary>
            连接服务器端的线程
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ServerIPAddress">
            <summary>
            目标服务器的IP地址
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ServerPort">
            <summary>
            目标服务器的监听端口
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.iServerPort">
            <summary>
            服务器以太网端口号
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.ipServerIPAddress">
            <summary>
            服务器以太网IP地址
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.iSleepTime">
            <summary>
            System.Threading.Thread.Sleep的等待时间(ms)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.iWaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.WaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)，范围：50~3000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bSaveReceivedStringToLog">
            <summary>
            保存接收到的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bSaveSendStringToLog">
            <summary>
            保存发送的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.qErrorMsg">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.ShowMessageDialog">
            <summary>
            是否使用提示对话框显示信息，默认 false
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.SendTimeout">
            <summary>
            获取或设置写操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusTCP.ReceiveTimeout">
            <summary>
            获取或设置读取操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.Client">
            <summary>
            进行Modbus TCP通讯的TCP实例化对象
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.PosIndexOfDataLengthInTCPReceivedBytes">
            <summary>
            接收到的字节数组中，数据长度的索引号[4]~[5]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.PosIndexOfSlaveAddressInTCPReceivedBytes">
            <summary>
            接收到的字节数组中，从站地址的索引号[6]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.PosIndexOfFuncCodeInTCPReceivedBytes">
            <summary>
            接收到的字节数组中，功能码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.PosIndexOfErrorCodeInTCPReceivedBytes">
            <summary>
            接收到的字节数组中，错误码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.PosIndexOfDataInTCPReceivedBytes">
            <summary>
            执行读取操作时，接收到的字节数组中，接收到的数据开始的索引号[9]
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个输入位的状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回单个输入位的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回多个字节输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：float</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilBit(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            写从站线圈(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="IsOn">设置线圈的当前值：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilBit(System.Byte,System.UInt16,System.Boolean[])">
            <summary>
            写从站线圈字节(位 - bit；1字节 = 8bit)，写线圈的布尔数组长度必须是8的整数倍
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置8*N个线圈的当前值数组：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilByte(System.Byte,System.UInt16,System.Byte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilByte(System.Byte,System.UInt16,System.Byte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilByte(System.Byte,System.UInt16,System.SByte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilByte(System.Byte,System.UInt16,System.SByte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Single)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Double)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteCoilWord(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站单个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站多个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站单个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站多个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Single)">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Double)">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ClearReceiveBuffer">
            <summary>
            清除发送前的接收缓冲区
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.ForceUnlock">
            <summary>
            出现线程锁异常时，用于执行强制清除线程锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Lock">
            <summary>
            锁定线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Unlock">
            <summary>
            释放线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bDisconnect">
            <summary>
            
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusTCP.bBackupOfConnectedFlag">
            <summary>
            已经
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Open">
            <summary>
            打开TCP端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Close">
            <summary>
            关闭TCP端口
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusTCP.sFilterRepeatMsg">
            <summary>
            过滤掉重复信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.Enqueue(System.String)">
            <summary>
            保存信息到队列
            </summary>
            <param name="Msg">信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.GetInfo">
            <summary>
            获取通讯的记录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.UnpackReceivedRTUMsg(System.Byte[])">
            <summary>
            将Modbus-RTU接收到的字节信息进行解析
            </summary>
            <param name="ReceivedMsg">接收到的字节信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.AnalysisErrorCode(System.Byte[])">
            <summary>
            解析返回信息的错误代码
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字节数组(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusTCP.sErrorMsgForReadWrite">
            <summary>
            执行读写时的错误信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusTCP.WriteAndReadBytes(System.Byte[],System.Byte)">
            <summary>
            发送数据到TCP并接收TCP返回的数据
            </summary>
            <param name="byResult">要发送的字节数据</param>
            <param name="DeviceAddress">目标从站地址</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.PackMultiWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32,System.Byte[])">
            <summary>
            创建写保持寄存器命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">发送的数据(字节)</param>
            <param name="DataLength">要发送的数据的数量：线圈 -- 位(bool)；寄存器 -- 字(short)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.PackSingleWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Byte[])">
            <summary>
            创建写保持寄存器命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">发送的数据(字节)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusTCP.PackReadCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32)">
            <summary>
            创建读取命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="ReadDataLength">读取数据长度，有效值范围：1~2000(位)</param>
            <returns></returns>
        </member>
        <member name="T:ModbusComm.CModbusUDP">
            <summary>
            Modbus UDP通讯客户端类，支持跨线程读写操作；如果是单线程操作，请将 EnableThreadLock 设置为 false 以提升性能
            授权声明：本软件作者将代码开源，仅用于交流学习。如果有商用需求，请联系软件作者协商相关事宜；否则，软件作者保留相关法律赋予的权利。
            免责声明：使用本软件的相关人员必须仔细检查代码并负全部责任，软件作者不承担任何可能的损失(包含可抗力和不可抗力因素)。
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.#ctor(System.String,System.String,System.UInt16,System.Int32,System.Int32,System.Boolean,Converter.BytesFormat,Converter.BytesFormat,Converter.BytesFormat,ThreadLock.LockerType)">
            <summary>
            Modbus UDP通讯客户端类的构造函数
            </summary>
            <param name="DLLPassword">使用此DLL的密码</param>
            <param name="TargetServerIPAddress">服务器的IP地址</param>
            <param name="TargetServerPort">服务器的端口号</param>
            <param name="SendTimeout">写超时时间</param>
            <param name="ReceiveTimeout">读超时时间</param>
            <param name="ReadSlaveDataOnly">是否只读取从站返回的消息，默认：false</param>
            <param name="paraBytesFormat">命令参数：多字节数据的格式</param>
            <param name="writeKeepRegisterBytesFormat">写数据：多字节数据的格式</param>
            <param name="readRegisterBytesFormat">读输入和保持寄存器数据：多字节数据的格式</param>
            <param name="ThreadLockType">线程同步锁类型</param>
        </member>
        <member name="F:ModbusComm.CModbusUDP.threadForReadonlyMode">
            <summary>
            只读模式下读取消息的线程
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.qReceivedDataQueue">
            <summary>
            只读模式下，Modbus通讯返回数据的结果解析类对象的队列
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.DequeueReceivedData">
            <summary>
            只读模式下，Modbus通讯返回数据的结果
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bIsDisposing">
            <summary>
            释放资源标志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bReadSlaveDataOnly">
            <summary>
            是否只读取从站返回的消息，适用于从站主动发送的情况
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ParaBytesFormat">
            <summary>
            命令参数：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.WriteCoilBytesFormat">
            <summary>
            写线圈数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.WriteKeepRegisterBytesFormat">
            <summary>
            写保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ReadInputRegisterBytesFormat">
            <summary>
            读输入寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ReadKeepRegisterBytesFormat">
            <summary>
            读保持寄存器数据：多字节数据的格式
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ReadCoilBytesFormat">
            <summary>
            读线圈数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ReadInputIOBytesFormat">
            <summary>
            读输入离散信号数据：多字节数据的格式，默认值：BytesFormat.ABCD
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.SyncLocker">
            <summary>
            同步线程锁
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bEnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.EnableThreadLock">
            <summary>
            启用线程锁标志
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.Author">
            <summary>
            软件作者：彭东南, southeastofstar@163.com
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ProtocolIDCodeBytes">
            <summary>
            协议标识
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.MsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.stMsgIDForWriting">
            <summary>
            执行写操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.MsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.stMsgIDForReading">
            <summary>
            执行读取操作时指定的消息ID
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.IsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bIsConnected">
            <summary>
            是否已经与服务器建立连接
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ServerIPAddress">
            <summary>
            目标服务器的IP地址
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ServerPort">
            <summary>
            目标服务器的监听端口
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.iServerPort">
            <summary>
            服务器以太网端口号
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.ipServerIPAddress">
            <summary>
            服务器以太网IP地址
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.iSleepTime">
            <summary>
            System.Threading.Thread.Sleep的等待时间(ms)
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.iWaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.WaitFeedbackTime">
            <summary>
            等待从站返回信息的时间(ms)，范围：50~3000
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bSaveReceivedStringToLog">
            <summary>
            保存接收到的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.bSaveSendStringToLog">
            <summary>
            保存发送的信息到日志
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.qErrorMsg">
            <summary>
            错误信息队列
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.ShowMessageDialog">
            <summary>
            是否使用提示对话框显示信息，默认 false
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.SendTimeout">
            <summary>
            获取或设置写操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="P:ModbusComm.CModbusUDP.ReceiveTimeout">
            <summary>
            获取或设置读取操作未完成时发生超时之前的毫秒数
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.Client">
            <summary>
            进行Modbus UDP通讯的UDP实例化对象
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.PosIndexOfDataLengthInUDPReceivedBytes">
            <summary>
            接收到的字节数组中，数据长度的索引号[4]~[5]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.PosIndexOfSlaveAddressInUDPReceivedBytes">
            <summary>
            接收到的字节数组中，从站地址的索引号[6]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.PosIndexOfFuncCodeInUDPReceivedBytes">
            <summary>
            接收到的字节数组中，功能码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.PosIndexOfErrorCodeInUDPReceivedBytes">
            <summary>
            接收到的字节数组中，错误码的索引号[7]
            </summary>
        </member>
        <member name="F:ModbusComm.CModbusUDP.PosIndexOfDataInUDPReceivedBytes">
            <summary>
            执行读取操作时，接收到的字节数组中，接收到的数据开始的索引号[9]
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的线圈状态(1个字节 = 8位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回线圈的字节当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的线圈状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的1个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回线圈多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站2个字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回线圈的2个双字当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadCoilWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的线圈状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回线圈多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputBit(System.Byte,System.UInt16,System.Boolean@)">
            <summary>
            读取从站单个输入位的状态(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回单个输入位的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputBit(System.Byte,System.UInt16,System.UInt16,System.Boolean[]@)">
            <summary>
            读取从站多个字节的输入状态(1个字节 = 8位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回多个字节输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputByte(System.Byte,System.UInt16,System.Byte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.Byte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputByte(System.Byte,System.UInt16,System.SByte@)">
            <summary>
            读取从站1个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputByte(System.Byte,System.UInt16,System.UInt16,System.SByte[]@)">
            <summary>
            读取从站多个字节的输入状态(位 - bit)，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回输入状态多个字节的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站1个字的输入状态，函数是以字为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站多个字的输入状态，函数是以字节为读取数据长度单位，返回的值是以字为单位(2个字节的倍数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字</param>
            <param name="Value">返回输入状态多个字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站1个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入状态1个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站2个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入状态的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputWord(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站多个双字的输入状态
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入状态多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站输入寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站输入寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站输入寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站输入寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站输入寄存器的当前值(float)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            【?? 测试读取数据时不能像其它功能码一样正确读取double值，在float范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站输入寄存器的当前值(double)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度</param>
            <param name="Value">返回输入寄存器的当前值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取long值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站2个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回2个双字输入寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadInputRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            【测试读取数据时不能像其它功能码一样正确读取ulong值，在int范围内可以正确读取，其它会对应不上，待更多测试】
            读取从站多个双字的输入寄存器的当前值
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：双字</param>
            <param name="Value">返回输入寄存器多个双字的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.Int16@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int16[]@)">
            <summary>
            读取从站保持寄存器的当前值(short: -32,768 到 32,767)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(short: -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt16[]@)">
            <summary>
            读取从站保持寄存器的当前值(ushort: 0 到 65535)，函数是以字节为读取数据长度单位
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.Int32@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int32[]@)">
            <summary>
            读取从站保持寄存器的当前值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt32@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt32[]@)">
            <summary>
            读取从站保持寄存器的当前值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：字节</param>
            <param name="Value">返回保持寄存器的当前值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.Single@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Single[]@)">
            <summary>
            读取从站float保持寄存器的当前值(32位浮点值)(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：float</param>
            <param name="Value">返回float保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.Double@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Double[]@)">
            <summary>
            读取从站double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回double保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.Int64@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.Int64[]@)">
            <summary>
            读取从站long(64位整数值)值到从站保持寄存器(-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回long保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt64@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ReadKeepRegister(System.Byte,System.UInt16,System.UInt16,System.UInt64[]@)">
            <summary>
            读取从站ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="ReadDataLength">读取数据长度，单位：double</param>
            <param name="Value">返回ulong保持寄存器的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilBit(System.Byte,System.UInt16,System.Boolean)">
            <summary>
            写从站线圈(位 - bit)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="IsOn">设置线圈的当前值：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilBit(System.Byte,System.UInt16,System.Boolean[])">
            <summary>
            写从站线圈字节(位 - bit；1字节 = 8bit)，写线圈的布尔数组长度必须是8的整数倍
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置8*N个线圈的当前值数组：true - On; false - Off</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilByte(System.Byte,System.UInt16,System.Byte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilByte(System.Byte,System.UInt16,System.Byte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilByte(System.Byte,System.UInt16,System.SByte)">
            <summary>
            写从站1个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilByte(System.Byte,System.UInt16,System.SByte[])">
            <summary>
            写从站N个字节的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字节线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站1个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站N个字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Single)">
            <summary>
            写从站1个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置1个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写从站N个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Double)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写从站2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteCoilWord(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写从站N个2个双字的线圈
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">起始地址</param>
            <param name="SetValue">设置N个2个双字线圈的当前值</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int16)">
            <summary>
            写从站单个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int16[])">
            <summary>
            写从站多个保持寄存器的值(short:  -32,768 到 32,767)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(short:  -32,768 到 32,767)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16)">
            <summary>
            写从站单个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置单个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt16[])">
            <summary>
            写从站多个保持寄存器的值(ushort: 0 到 65535)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置多个保持寄存器的值(ushort: 0 到 65535)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int32)">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int32[])">
            <summary>
            写从站多个保持寄存器的值(int)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(int)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32)">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt32[])">
            <summary>
            写从站多个保持寄存器的值(uint)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(uint)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Single)">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Single[])">
            <summary>
            写float(32位浮点值)值到从站保持寄存器(float  -3.4×10的38次方 到 +3.4×10的38次方, 精度：7 位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(float)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Double)">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Double[])">
            <summary>
            写double(64位浮点值)值到从站保持寄存器(±5.0×10的−324次方 到 ±1.7×10的308次方   精度:15到16位)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(double)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int64)">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.Int64[])">
            <summary>
            写long(64位整数值)值到从站保持寄存器(9,223,372,036,854,775,808 到 9,223,372,036,854,775,807, 有符号 64 位整数)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(long)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64)">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteKeepRegister(System.Byte,System.UInt16,System.UInt64[])">
            <summary>
            写ulong值到从站保持寄存器(0 到 18,446,744,073,709,551,615)
            </summary>
            <param name="DeviceAddress">从站设备地址</param>
            <param name="BeginAddress">读取起始地址</param>
            <param name="SetValue">设置保持寄存器的值(ulong)</param>
            <returns>是否成功执行命令</returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ForceUnlock">
            <summary>
            出现线程锁异常时，用于执行强制清除线程锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Lock">
            <summary>
            锁定线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Unlock">
            <summary>
            释放线程锁
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.ClearReceiveBuffer">
            <summary>
            清除发送前的接收缓冲区
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Open">
            <summary>
            打开UDP端口
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Close">
            <summary>
            关闭UDP端口
            </summary>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusUDP.sFilterRepeatMsg">
            <summary>
            过滤掉重复信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.Enqueue(System.String)">
            <summary>
            保存信息到队列
            </summary>
            <param name="Msg">信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.GetInfo">
            <summary>
            获取通讯的记录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.UnpackReceivedRTUMsg(System.Byte[])">
            <summary>
            将Modbus-RTU接收到的字节信息进行解析
            </summary>
            <param name="ReceivedMsg">接收到的字节信息</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.AnalysisErrorCode(System.Byte[])">
            <summary>
            解析返回信息的错误代码
            </summary>
            <param name="MsgWithErrorCode">从站返回的完整字节数组(含错误信息)</param>
            <returns></returns>
        </member>
        <member name="F:ModbusComm.CModbusUDP.sErrorMsgForReadWrite">
            <summary>
            执行读写时的错误信息
            </summary>
        </member>
        <member name="M:ModbusComm.CModbusUDP.WriteAndReadBytes(System.Byte[],System.Byte)">
            <summary>
            发送数据到TCP并接收TCP返回的数据
            </summary>
            <param name="byResult">要发送的字节数据</param>
            <param name="DeviceAddress">目标从站地址</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.PackMultiWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32,System.Byte[])">
            <summary>
            创建写保持寄存器命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="DataLength">要发送的数据的数量：线圈 -- 位(bool)；寄存器 -- 字(short)</param>
            <param name="Data">发送的数据(字节)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.PackSingleWriteCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Byte[])">
            <summary>
            创建单个写命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="Data">发送的数据(字节)</param>
            <returns></returns>
        </member>
        <member name="M:ModbusComm.CModbusUDP.PackReadCmd(System.Byte,Converter.Modbus.ModbusFuncCode,System.UInt16,System.Int32)">
            <summary>
            创建读取命令的字节数组，可以直接发送这个字节数组到TCP端口
            </summary>
            <param name="DeviceAddress">从站地址</param>
            <param name="FuncCode">功能码</param>
            <param name="BeginAddress">起始地址</param>
            <param name="ReadDataLength">读取数据长度，有效值范围：1~2000(位)</param>
            <returns></returns>
        </member>
    </members>
</doc>
